\documentclass[10pt,a4paper]{article}
 
\usepackage[margin=1in]{geometry} 
\usepackage{amsmath,amsthm,amssymb, graphicx, multicol, array}
 
\newcommand{\N}{\mathbb{N}}
\newcommand{\Z}{\mathbb{Z}}
 
\newenvironment{problem}[2][Problem]{\begin{trivlist}
\item[\hskip \labelsep {\bfseries #1}\hskip \labelsep {\bfseries #2.}]}{\end{trivlist}}
\usepackage{longtable}
 \geometry{
 a4paper,
 total={170mm,257mm},
 left=19mm,
 top=19mm,
 bottom=19mm,
 right=19mm
 }
\begin{document}
 
\title{CS262- 30 Business Needs }
\author{
CS262- Database Systems\\
2021-CS-33 | Muhammad Hamad Hassan\\}
\maketitle
\noindent
%----------------------------------------Start--------------
\begin{problem}{1}
Give students name present in 2023
\end{problem}
SELECT CONCAT(S.FirstName,' ',S.LastName) [FULL NAME]\\
FROM Student S \\
JOIN StudentAttendance SA \\
ON S.Id=SA.StudentId \\
JOIN ClassAttendance CA \\
ON CA.Id=SA.AttendanceId \\
WHERE YEAR(CA.AttendanceDate)='2023'  AND month(CA.AttendanceDate)='2'

\begin{problem}{2}
Give the student list those absent in 2023
\end{problem}
SELECT CONCAT(S.FirstName,' ',S.LastName) [FULL NAME]\\
FROM Student S JOIN StudentAttendance SA \\
ON S.Id=SA.StudentId\\
JOIN ClassAttendance CA\\
ON CA.Id=SA.AttendanceId\\
WHERE SA.AttendanceStatus is null 

\begin{problem}{3}
Give CLO-2 Rubric Detail and measurement level number
\end{problem}
SELECT RL.Details,Rl.MeasurementLevel\\
FROM Rubric R JOIN  RubricLevel RL\\
ON R.Id=RL.RubricId\\
WHERE R.CloId=2

\begin{problem}{4}
Give Rubric-1 all Rubrics Level Detail
\end{problem}
SELECT RL.Details,Rl.MeasurementLevel\\
FROM Rubric R JOIN  RubricLevel RL\\
ON R.Id=RL.RubricId\\
WHERE R.Id=1;

\begin{problem}{5}
Give Assessment-1 all Components name and total marks
\end{problem}
SELECT AC.Name,AC.TotalMarks\\
FROM Assessment A JOIN AssessmentComponent AC\\
ON A.Id=AC.AssessmentId\\
WHERE A.Id=1

\begin{problem}{6}
Give Assessment-1 corresponding CLO Number 
\end{problem}
SELECT R.CloId\\
FROM Assessment A JOIN AssessmentComponent AC\\
ON A.Id=AC.AssessmentId\\
JOIN Rubric R\\
ON AC.RubricId=R.Id\\
WHERE CloId=2\\

\begin{problem}{7}
Give the Assessment-1 Rubric
\end{problem}
SELECT AC.Name,R.Details,AC.TotalMarks\\
FROM AssessmentComponent AC JOIN Rubric R\\
ON AC.RubricId=R.Id\\
WHERE AC.AssessmentId=1

\begin{problem}{8}
Give the Student Name who's assessment are not added into the system
\end{problem}
SELECT CONCAT(S.FirstName,' ',S.LastName) [Full Name]\\
FROM Student S JOIN StudentResult SR\\
ON S.Id=SR.StudentId\\
WHERE SR.StudentId IS NOT NULL\\\

\begin{problem}{9}
Calculate the student Obtained marks in the assessemnt 
\end{problem}
SELECT AC.Name AS Component,R.Details AS Rubric,AC.TotalMarks AS [Component Marks]\\
,(SELECT Max(RL.MeasurementLevel) AS [Student Level Rubric]
FROM StudentResult JOIN RubricLevel RL 
ON SR.RubricMeasurementId=RL.Id)\\
,(SELECT Max((3/4)*10)\\
FROM StudentResult SR JOIN RubricLevel RL\\ 
ON SR.RubricMeasurementId=RL.Id \\
JOIN AssessmentComponent AC\\
ON AC.Id=SR.AssessmentComponentId) \\
FROM StudentResult SR JOIN AssessmentComponent AC  \\
ON  SR.AssessmentComponentId=AC.Id\\
JOIN Rubric R\\
ON R.Id=AC.RubricId

\begin{problem}{10}
Give the students who fullfill the particular CLO
\end{problem}
SELECT CONCAT(S.FirstName,' ',S.LastName) [Full Name]\\
FROM StudentResult SR JOIN RubricLevel  RL\\
ON SR.RubricMeasurementId=RL.Id\\
JOIN Student S\\
ON  S.Id=SR.StudentId\\
JOIN Rubric R \\
ON R.Id=RL.RubricId\\
JOIN Clo C\\
ON C.Id=R.CloId\\
WHERE CloId=2

\begin{problem}{11}
Find the duplicate students who taking the same CLO
\end{problem}
SELECT CONCAT(S.FirstName,' ',S.LastName) [Full Name]\\
FROM StudentResult SR JOIN RubricLevel  RL\\
ON SR.RubricMeasurementId=RL.Id\\
JOIN Student S\\
ON  S.Id=SR.StudentId\\
JOIN Rubric R \\
ON R.Id=RL.RubricId\\
JOIN Clo C\\
ON C.Id=R.CloId\\
WHERE CloId=2\\
GROUP BY S.FirstName,S.LastName\\
HAVING COUNT(S.FirstName)>1

\begin{problem}{12}
Display all enrolled students
\end{problem}
SELECT *\\
FROM Student S\\
WHERE S.Status=1

\begin{problem}{13}
Display all the assignemnt with total weightage
\end{problem}
SELECT SUM(A.TotalWeightage) AS [Total Weightages]
FROM Assessment A

\begin{problem}{14}
Add new student into the database 
\end{problem}
INSERT INTO STUDENT(FirstName,LastName,Contact,Email,RegistrationNumber,Status)\\
VALUES('Syed Hashir','Husnain','03000000000','abc@example.com','2021-CS-1',1)

\begin{problem}{15}
Change the student contact number of roll number 3
\end{problem}
UPDATE Student\\ SET Contact='03000000001'\\ WHERE RegistrationNumber='2021-CS-3'
\begin{problem}{16}
Delete the students whose id is 2
\end{problem}
DELETE from STUDENT\\ WHERE ID=2

\begin{problem}{17}
Mark the student attendance 
\end{problem}
INSERT INTO ClassAttendance(AttendanceDate) \\VALUES(GETDATE())
\begin{problem}{18}
Change the attendance status
\end{problem}
UPDATE ClassAttendance \\ SET AttendanceDate=GETDATE()\\ where ID=5

\begin{problem}{19}
Remove the id number 2 attendance 
\end{problem}
DELETE ClassAttendance WHERE ID=2

\begin{problem}{20}
Add the CLO into the system
\end{problem}
INSERT INTO Clo \\VALUES('CLO 2: Implement abstraction',GETDATE(),GETDATE())

\begin{problem}{21}
Change the CLO1 Detail
\end{problem}
UPDATE CLO \\SET Name ='CLO 1: Apply composition, inheritance'\\ WHERE Id=1

\begin{problem}{22}
Add the rubric detail into the system 
\end{problem}
INSERT INTO Rubric(Id,Details,CloId) \\VALUES(3,'Testing',2)

\begin{problem}{23}
Update the rubric detail whose id is 1
\end{problem}
UPDATE Rubric SET Details='Design '\\ WHERE ID=1

\begin{problem}{24}
Insert the rubric level of rubric number 2 
\end{problem}
INSERT INTO RubricLevel\\ VALUES(2,
'Program does not compile or interpret due to lack of syntax knowledge'
,1)
\begin{problem}{25}
Get the all rubric information  
\end{problem}
SELECT * \\
FROM RubricLevel\\
\begin{problem}{26}
Question goes here
\end{problem}

\begin{problem}{27}
Crate the Quiz-1 Assessment 
\end{problem}
INSERT INTO Assessment \\VALUES('Quiz-1',GETDATE(),10,10)

\begin{problem}{28}
Provide the assessment 1 details 
\end{problem}
INSERT INTO AssessmentComponent \\ VALUES('Question-3',1,5,GETDATE(),GETDATE(),1)

\begin{problem}{29}
Add the student result assessment information of CLO no 2 
\end{problem}
INSERT INTO StudentResult \\VALUES(9,3,5,GETDATE())
\begin{problem}{30}
View all marked attendance 
\end{problem}
SELECT * \\
FROM ClassAttendance






\end{document}